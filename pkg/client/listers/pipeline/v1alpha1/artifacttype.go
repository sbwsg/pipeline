/*
Copyright 2019 The Tekton Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/tektoncd/pipeline/pkg/apis/pipeline/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ArtifactTypeLister helps list ArtifactTypes.
type ArtifactTypeLister interface {
	// List lists all ArtifactTypes in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ArtifactType, err error)
	// ArtifactTypes returns an object that can list and get ArtifactTypes.
	ArtifactTypes(namespace string) ArtifactTypeNamespaceLister
	ArtifactTypeListerExpansion
}

// artifactTypeLister implements the ArtifactTypeLister interface.
type artifactTypeLister struct {
	indexer cache.Indexer
}

// NewArtifactTypeLister returns a new ArtifactTypeLister.
func NewArtifactTypeLister(indexer cache.Indexer) ArtifactTypeLister {
	return &artifactTypeLister{indexer: indexer}
}

// List lists all ArtifactTypes in the indexer.
func (s *artifactTypeLister) List(selector labels.Selector) (ret []*v1alpha1.ArtifactType, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ArtifactType))
	})
	return ret, err
}

// ArtifactTypes returns an object that can list and get ArtifactTypes.
func (s *artifactTypeLister) ArtifactTypes(namespace string) ArtifactTypeNamespaceLister {
	return artifactTypeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ArtifactTypeNamespaceLister helps list and get ArtifactTypes.
type ArtifactTypeNamespaceLister interface {
	// List lists all ArtifactTypes in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ArtifactType, err error)
	// Get retrieves the ArtifactType from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ArtifactType, error)
	ArtifactTypeNamespaceListerExpansion
}

// artifactTypeNamespaceLister implements the ArtifactTypeNamespaceLister
// interface.
type artifactTypeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ArtifactTypes in the indexer for a given namespace.
func (s artifactTypeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ArtifactType, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ArtifactType))
	})
	return ret, err
}

// Get retrieves the ArtifactType from the indexer for a given namespace and name.
func (s artifactTypeNamespaceLister) Get(name string) (*v1alpha1.ArtifactType, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("artifacttype"), name)
	}
	return obj.(*v1alpha1.ArtifactType), nil
}
